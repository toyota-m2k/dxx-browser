<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:DxxBrowser"
        >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DxxSvgPath.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <!-- Converters -->
    <local:BoolVisibilityConverter x:Key="BoolVisibilityConverter"/>
    <local:NegBoolVisibilityConverter x:Key="NegBoolVisibilityConverter"/>
    <local:NegBoolConverter x:Key="NegBoolConverter"/>
    <local:EnumBooleanConverter x:Key="EnumBooleanConverter"/>
    <local:EnumVisibilityConverter x:Key="EnumVisibilityConverter"/>
    <local:NegEnumVisibilityConverter x:Key="NegEnumVisibilityConverter"/>
    <local:DateStringConverter x:Key="DateStringConverter"/>
    <local:DecimalStringConverter x:Key="DecimalStringConverter"/>
    <local:BoolGridLengthConverter x:Key="BoolGridLengthConverter"/>
    <local:BoolGridLengthAutoConverter x:Key="BoolGridLengthAutoConverter"/>
    <local:IntBoolConverter x:Key="IntBoolConverter"/>
    <local:HtmlNodeStringConverter x:Key="HtmlNodeStringConverter"/>

    <!-- Colors -->
    <SolidColorBrush x:Key="DialogBG" Color="#FF190280" />

    <SolidColorBrush x:Key="NormalBtnBG" Color="#00FFFFFF" />
    <SolidColorBrush x:Key="MouseOverBtnBG" Color="#80FF8080" />
    <SolidColorBrush x:Key="PressedBtnBG" Color="#80888888" />
    <SolidColorBrush x:Key="DisabledBtnBG" Color="#30FFFFFF" />

    <SolidColorBrush x:Key="NormalBtnFG" Color="#FFFFFF" />
    <SolidColorBrush x:Key="MouseOverBtnFG" Color="#FFE2FF80" />
    <SolidColorBrush x:Key="PressedBtnFG" Color=  "#40FFa0" />
    <SolidColorBrush x:Key="DisabledBtnFG" Color="#A0A0A0" />

    <!-- Icon Button -->
    <ControlTemplate x:Key="IconButtonTemplate"  TargetType="Button">
        <Border 
            x:Name="border"
            Background="{TemplateBinding Background}"
            Padding="{TemplateBinding Padding}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            >
            <ContentPresenter 
                VerticalAlignment="Center" 
                HorizontalAlignment="Center"/>
        </Border>
    </ControlTemplate>

    <Style x:Key="PushButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="{StaticResource NormalBtnBG}"/>
        <Setter Property="Foreground" Value="{StaticResource NormalBtnFG}"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Template" Value="{StaticResource IconButtonTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MouseOverBtnBG}" />
                <Setter Property="Foreground" Value="{StaticResource MouseOverBtnFG}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBtnBG}" />
                <Setter Property="Foreground" Value="{StaticResource PressedBtnFG}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource NormalBtnBG}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledBtnFG}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Icon Toggle Button -->
    <ControlTemplate x:Key="IconToggleButtonTemplate"  TargetType="ToggleButton">
        <Border 
            x:Name="border"
            Background="{TemplateBinding Background}"
            Padding="{TemplateBinding Padding}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            >
            <ContentPresenter 
                VerticalAlignment="Center" 
                HorizontalAlignment="Center"/>
        </Border>
    </ControlTemplate>

    <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="{StaticResource NormalBtnBG}"/>
        <Setter Property="Foreground" Value="{StaticResource NormalBtnFG}"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Template" Value="{StaticResource IconToggleButtonTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MouseOverBtnBG}" />
                <Setter Property="Foreground" Value="{StaticResource MouseOverBtnFG}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBtnBG}" />
                <Setter Property="Foreground" Value="{StaticResource PressedBtnFG}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource NormalBtnBG}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledBtnFG}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Background" Value="#80000000"/>
                <Setter Property="Foreground" Value="#00FFFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="RadioButton" BasedOn="{StaticResource ToggleButtonStyle}" x:Key="IconRadioButton">
    </Style>

    <!-- Icon Check Button -->
    <ControlTemplate x:Key="IconCheckButtonTemplate"  TargetType="local:CheckButton">
        <Border 
            x:Name="border"
            Background="{TemplateBinding Background}"
            Padding="{TemplateBinding Padding}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            >
            <ContentPresenter 
                VerticalAlignment="Center" 
                HorizontalAlignment="Center"/>
        </Border>
    </ControlTemplate>

    <Style x:Key="CheckButtonStyle" TargetType="local:CheckButton">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="{StaticResource NormalBtnBG}"/>
        <Setter Property="Foreground" Value="{StaticResource NormalBtnFG}"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Template" Value="{StaticResource IconCheckButtonTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MouseOverBtnBG}" />
                <Setter Property="Foreground" Value="{StaticResource MouseOverBtnFG}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBtnBG}" />
                <Setter Property="Foreground" Value="{StaticResource PressedBtnFG}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource NormalBtnBG}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledBtnFG}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Background" Value="#80000000"/>
                <Setter Property="Foreground" Value="#00FFFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SmallPushButtonStyle" TargetType="Button" BasedOn="{StaticResource PushButtonStyle}">
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Padding" Value="4"/>
    </Style>



    <Style x:Key="CustomSliderStyle" TargetType="Slider">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Grid.Resources>
                            <Style x:Key="SliderThumbStyle" TargetType="Thumb">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Thumb">
                                            <!--これが「つまみ」部分-->
                                            <!--<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>-->
                                            <Ellipse Fill="White" Width="20" Height="20" Margin="-5,-8,-5,-5" Stroke="LimeGreen" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <Grid x:Name="SliderContainer" Background="Transparent">
                            <Grid x:Name="HorizontalTemplate">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!--これが満たされてない部分のバー-->
                                <Rectangle x:Name="HorizontalTrackRect" RadiusX="5" RadiusY="5" Grid.ColumnSpan="3" Fill="Silver" Grid.Row="1" Margin="0,0,0,3"/>
                                <!--これが満たされている部分のバー-->
                                <Rectangle x:Name="HorizontalDecreaseRect" RadiusX="5" RadiusY="5" Fill="LimeGreen" Grid.Row="1" Margin="0,0,0,3" />
                                <!--<Thumb x:Name="HorizontalThumb" AutomationProperties.AccessibilityView="Raw" Grid.Row="1" Grid.Column="1" DataContext="{TemplateBinding Value}" 
                                           Background="{ThemeResource SliderThumbBackgroundThemeBrush}" 
                                           Height="{ThemeResource SliderTrackThemeHeight}" 
                                           Width="{ThemeResource SliderTrackThemeHeight}"
                                           Style="{StaticResource SliderThumbStyle}" />-->
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Fade in/out effect -->
    <Storyboard x:Key="MouseOverStoryboard" Duration="00:00:00.5">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="00:00:00.5" />
    </Storyboard>

    <Storyboard x:Key="MouseLeaveStoryboard" Duration="00:00:00.5">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.01" Duration="00:00:00.5" />
    </Storyboard>

    <!-- ListView Column Header Sorting Icon -->
    <DrawingImage x:Key="AscImageSource">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Geometry="M7,15L12,10L17,15H7Z" Brush="#35000000"/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>

    <ImageBrush x:Key="AscBrush" AlignmentX="Right" AlignmentY="Center" ImageSource="{StaticResource AscImageSource}"/>

    <Style x:Key="AscImage" TargetType="Image">
        <Setter Property="Source" Value="{StaticResource AscImageSource}"/>
    </Style>

    <DrawingImage x:Key="DescImageSource">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Geometry="M7,10L12,15L17,10H7Z" Brush="#35000000"/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>

    <ImageBrush x:Key="DescBrush" AlignmentX="Right" AlignmentY="Center" ImageSource="{StaticResource DescImageSource}"/>

    <Style x:Key="DescImage" TargetType="Image">
        <Setter Property="Source" Value="{StaticResource DescImageSource}"/>
    </Style>


    <Style x:Key="BookmarkButtonStyle" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template" Value="{StaticResource IconToggleButtonTemplate}"/>
        <Setter Property="Content">
            <Setter.Value>
                <Path Data="M12,15.39L8.24,17.66L9.23,13.38L5.91,10.5L10.29,10.13L12,6.09L13.71,10.13L18.09,10.5L14.77,13.38L15.76,17.66M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z"
                      Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ButtonBase}}"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="Yellow" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledBtnFG}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Content">
                    <Setter.Value>
                        <Path Data="M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z" Stretch="Fill" Fill="#80FFFF"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



</ResourceDictionary>