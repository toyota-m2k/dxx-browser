<UserControl x:Class="DxxBrowser.DxxBrowserView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DxxBrowser"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ct="clr-namespace:Microsoft.Toolkit.Wpf.UI.Controls;assembly=Microsoft.Toolkit.Wpf.UI.Controls.WebView"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Unloaded="OnUnloaded"
             >
    <UserControl.Resources>
        <ResourceDictionary Source="DxxResource.xaml"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- Navigation Bar -->
        <local:DxxNaviBar Grid.Row="0" x:Name="naviBar"/>
        
        <!-- Browser Body -->
        <Grid Grid.Row="1" x:Name="browserHostGrid"/>
        
        <!-- どういうわけか、WebView の上にViewを置くと、WebViewの裏に隠れてしまう-->
        <!--<Grid Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Margin="4" Background="#A0F0F8FF"
              Visibility="{Binding LinkActivated.Value, Converter={StaticResource BoolVisibilityConverter}}">
            <TextBlock Text="{Binding ActivatedUrl.Value}" HorizontalAlignment="Left"/>
        </Grid>-->
        
        <!-- Frames List -->
        <StackPanel Grid.Row="2" Orientation="Vertical" HorizontalAlignment="Stretch">
            <Grid VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Background="#C0EEDEDD">
                <TextBlock Text="{Binding ActivatedUrl.Value}" HorizontalAlignment="Left" Foreground="Black" Margin="5,1"/>
            </Grid>
            <Grid
              Background="{StaticResource DialogBG}"
              Visibility="{Binding HasFrameLink.Value, Converter={StaticResource BoolVisibilityConverter}}">
                <Grid.Resources>
                    <ResourceDictionary Source="DxxFoldingButton.xaml"/>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto" MaxHeight="200"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ToggleButton Grid.Row="0" Grid.Column="0" Style="{StaticResource FoldingButtonStyle}" IsChecked="{Binding ShowFrameList.Value, Mode=TwoWay}"/>
                <TextBlock Grid.Row="0" Grid.Column="1" Text="Frames" VerticalAlignment="Center" Foreground="White" Margin="8,0"/>
                <ListView Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" ItemsSource="{Binding FrameUrls.Value}" 
                  x:Name="frameListView"
                  Visibility="{Binding ShowFrameList.Value, Converter={StaticResource BoolVisibilityConverter}}">
                    <!--<i:Interaction.Triggers>
                <i:EventTrigger EventName="LeftDoubleClick">
                    <i:InvokeCommandAction Command="{Binding FrameSelectCommand}" 
                                           CommandParameter="{Binding ElementName=frameListView,Path=SelectedItem}" />
                </i:EventTrigger>
                </i:Interaction.Triggers>-->
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}">
                                <TextBlock.InputBindings>
                                    <!--<MouseBinding Gesture="LeftDoubleClick" Command="{Binding FrameSelectCommand}"/>-->
                                    <MouseBinding Gesture="LeftDoubleClick" 
                                Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.FrameSelectCommand}"
                                CommandParameter="{Binding}" />
                                </TextBlock.InputBindings>
                            </TextBlock>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <!-- ContextMenu/MenuItem から ListViewの（＝Windowの）DataContextを参照するため、Tag:object に DataContextをセットしておく -->
                            <Setter Property="Tag"
                            Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ListView}}" />
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <!-- ListViewのTagにセットしておいたWindow#DataContextを、ContextMenuのデータコンテキストにセットするセットしておく -->
                                    <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                        <MenuItem Header="Copy" Command="{Binding CopyCommand}" CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                        <MenuItem Header="Analyze" Command="{Binding AnalyzeCommand}" CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>

                        </Style>
                    </ListView.ItemContainerStyle>

                    <!--<ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <EventSetter Event="MouseDoubleClick" Handler="OnDownloadedItemActivate"/>
                </Style>
                </ListView.ItemContainerStyle>-->
                    <!--<ListView.View>
                    <GridView>
                        <GridViewColumn Header="Name" Width="150" DisplayMemberBinding="{Binding Name}" />
                        <GridViewColumn Header="Status" Width="150">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding StatusString}" Foreground="{Binding StatusColor}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Percent" Width="50" DisplayMemberBinding="{Binding PercentString}"/>
                        <GridViewColumn Header="Description" Width="200" DisplayMemberBinding="{Binding Description}"/>
                    </GridView>
                </ListView.View>-->
                </ListView>
            </Grid>
        </StackPanel>
    </Grid>
</UserControl>
